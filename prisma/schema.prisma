// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  PENDING
  INACTIVE
}

model User {
  id String @id @default(uuid())

  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE) // will change to PENDING if has feature confirm email
  avatarUrl String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  comments  Comment[]

  @@map("user")
}

model Post {
  id String @id @default(uuid())

  title     String
  content   String
  imageUrl  String?
  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  comments Comment[]

  @@map("post")
}

model Comment {
  id String @id @default(uuid())

  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  parent   Comment?  @relation("CommentReply", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?
  children Comment[] @relation("CommentReply")

  @@map("comment")
}
